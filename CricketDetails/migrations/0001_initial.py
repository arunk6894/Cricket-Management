# Generated by Django 2.1.5 on 2020-04-24 18:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BatPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat', models.BooleanField(default=False)),
                ('bat_position', models.IntegerField(default=0)),
                ('bat_runs', models.IntegerField(default=0)),
                ('bat_par_score', models.IntegerField(default=0)),
                ('bat_balls', models.IntegerField(default=0)),
                ('bat_how_out', models.CharField(default='DNB', max_length=32)),
                ('bat_inning_no', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='BowlPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bowl', models.BooleanField(default=False)),
                ('bowl_overs', models.FloatField(default=0)),
                ('bowl_runs', models.IntegerField(default=0)),
                ('bowl_maidens', models.IntegerField(default=0)),
                ('bowl_position', models.IntegerField(default=0)),
                ('bowl_pareconomy', models.FloatField(default=0.0)),
                ('bowl_wickets_lbw', models.IntegerField(default=0)),
                ('bowl_wickets_bowled', models.IntegerField(default=0)),
                ('bowl_wickets_stumped', models.IntegerField(default=0)),
                ('bowl_wickets_caught', models.IntegerField(default=0)),
                ('bowl_wickets_hit_wicket', models.IntegerField(default=0)),
                ('bowl_wickets_total', models.IntegerField(default=0)),
                ('bowl_inning_no', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Clubstate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('competition_type', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='FieldPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_catches', models.IntegerField(default=0)),
                ('field_run_outs', models.IntegerField(default=0)),
                ('field_stumped', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Ground',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('clubstate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Clubstate')),
            ],
        ),
        migrations.CreateModel(
            name='Inning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runs', models.IntegerField()),
                ('wickets', models.IntegerField()),
                ('overs', models.FloatField()),
                ('declared', models.BooleanField()),
                ('extras_byes', models.IntegerField(default=0)),
                ('extras_leg_byes', models.IntegerField(default=0)),
                ('extras_wides', models.IntegerField(default=0)),
                ('extras_no_balls', models.IntegerField(default=0)),
                ('extras_penalties', models.IntegerField(default=0)),
                ('extras_total', models.IntegerField(default=0)),
                ('highlights', models.TextField(default='')),
                ('complete_innings', models.BooleanField(default=False)),
                ('inning_no', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10)),
                ('last_updated', models.DateField()),
                ('match_type', models.CharField(max_length=64)),
                ('game_type', models.CharField(max_length=32)),
                ('toss_won_by_team_id', models.CharField(max_length=8)),
                ('toss', models.CharField(max_length=512)),
                ('batted_first', models.CharField(max_length=8)),
                ('result', models.CharField(max_length=2)),
                ('result_description', models.CharField(max_length=512)),
                ('result_applied_to', models.CharField(max_length=8)),
                ('match_notes', models.TextField()),
                ('number_of_players', models.IntegerField(default=0)),
                ('full_scorecard', models.BooleanField(default=False)),
                ('processing_issue', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'matches',
            },
        ),
        migrations.CreateModel(
            name='MatchDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('day', models.IntegerField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('imageUri', models.ImageField(upload_to='uploads/', verbose_name='image')),
                ('JerseyNumber', models.IntegerField()),
                ('country', models.CharField(max_length=10)),
                ('clubstate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clubstate', to='CricketDetails.Clubstate')),
            ],
        ),
        migrations.CreateModel(
            name='Scorer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ScorerAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Match')),
                ('scorer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Scorer')),
            ],
        ),
        migrations.CreateModel(
            name='TeamStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(upload_to='uploads/', verbose_name='logo')),
                ('clubstate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Clubstate')),
            ],
        ),
        migrations.CreateModel(
            name='Umpire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UmpireAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Match')),
                ('umpire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Umpire')),
            ],
        ),
        migrations.AddField(
            model_name='playerstructure',
            name='identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifier1', to='CricketDetails.TeamStructure'),
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='CricketDetails.TeamStructure'),
        ),
        migrations.AddField(
            model_name='match',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Competition'),
        ),
        migrations.AddField(
            model_name='match',
            name='date',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.MatchDate'),
        ),
        migrations.AddField(
            model_name='match',
            name='ground',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Ground'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='CricketDetails.TeamStructure'),
        ),
        migrations.AddField(
            model_name='inning',
            name='bat_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bat_team', to='CricketDetails.TeamStructure'),
        ),
        migrations.AddField(
            model_name='inning',
            name='bowl_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowl_team', to='CricketDetails.TeamStructure'),
        ),
        migrations.AddField(
            model_name='inning',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Match'),
        ),
        migrations.AddField(
            model_name='fieldperformance',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Match'),
        ),
        migrations.AddField(
            model_name='fieldperformance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.PlayerStructure'),
        ),
        migrations.AddField(
            model_name='competition',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.League'),
        ),
        migrations.AddField(
            model_name='bowlperformance',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Match'),
        ),
        migrations.AddField(
            model_name='bowlperformance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.PlayerStructure'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='bat_out_bowler',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bat_bowler', to='CricketDetails.PlayerStructure'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='bat_out_fielder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bat_fielder', to='CricketDetails.PlayerStructure'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.Match'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CricketDetails.PlayerStructure'),
        ),
    ]
